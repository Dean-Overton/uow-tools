SELECT O_CUSTKEY, L_SUPPKEY, COUNT(*) AS TOTAL_ORDERED_PARTS
FROM ORDERS JOIN LINEITEM ON ORDERS.O_ORDERKEY = LINEITEM.L_ORDERKEY
WHERE O_CLERK IN ('Clerk#000000988', 'Clerk#000000992')
GROUP BY O_CUSTKEY, L_SUPPKEY WITH CUBE;

SELECT
    L_PARTKEY,
    L_SUPPKEY,
    MAX(L_DISCOUNT) AS LARGEST_DISCOUNT
FROM LINEITEM
WHERE L_PARTKEY IN (18, 19, 20)
GROUP BY L_PARTKEY, L_SUPPKEY WITH ROLLUP;

SELECT
    YEAR(O_ORDERDATE) AS YEAR,
    O_CLERK,
    MIN (L_EXTENDEDPRICE) AS SMALLEST_PRICE
FROM ORDERS JOIN LINEITEM ON ORDERS.O_ORDERKEY = LINEITEM.L_ORDERKEY
GROUP BY YEAR(O_ORDERDATE), O_CLERK
GROUPING SETS (
    (YEAR(O_ORDERDATE)),
    (O_CLERK)
);

SELECT
    PS_PARTKEY,
    PS_AVAILQTY,
    MIN(PS_AVAILQTY) OVER (PARTITION BY PS_PARTKEY) AS SMALLEST_AVAILQTY,
    AVG(PS_AVAILQTY) OVER (PARTITION BY PS_PARTKEY) AS AVG_AVAILQTY
FROM PARTSUPP
WHERE PS_PARTKEY IN (18, 19, 20);

SELECT
    ROW_NUMBER() OVER (PARTITION BY PS_PARTKEY ORDER BY PS_AVAILQTY DESC) AS RANK,
    PS_PARTKEY,
    PS_AVAILQTY
FROM PARTSUPP
WHERE PS_PARTKEY IN (18, 19, 20)
ORDER BY RANK ASC, PS_AVAILQTY DESC;

SELECT 
    PS_PARTKEY,
    PS_AVAILQTY,
    AVG(PS_AVAILQTY) OVER (
        PARTITION BY PS_PARTKEY 
        ORDER BY PS_AVAILQTY
        ROWS UNBOUNDED PRECEDING
    ) as avg_quantity
FROM 
    PARTSUPP
WHERE 
    PS_PARTKEY IN (18, 19, 20)
ORDER BY 
    PS_PARTKEY,
    PS_AVAILQTY;